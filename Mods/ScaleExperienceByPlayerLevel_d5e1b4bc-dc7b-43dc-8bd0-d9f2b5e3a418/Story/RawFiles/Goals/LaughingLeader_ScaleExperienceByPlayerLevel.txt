Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION

/*
==================
  Settings Flags
==================
LLXPSCALE_DisableDeathExperience
	Characters don't grant xp on death.

LLXPSCALE_IgnoreEnemyAlignment
	Allies/neutral characters that die also grant xp to parties.

LLXPSCALE_AlwaysScaleToPlayerLevel
	Lower level enemy death xp will be scaled up to the player's level.
*/

//REGION QUERIES
QRY
LLXPSCALE_QRY_IsHostileToPlayer((CHARACTERGUID)_Char)
AND
GlobalGetFlag("LLXPSCALE_IgnoreEnemyAlignment", 0)
AND
DB_IsPlayer(_Player)
AND
CharacterIsEnemy(_Char, _Player, 1)
THEN
DB_NOOP(1);

QRY
LLXPSCALE_QRY_IsHostileToPlayer((CHARACTERGUID)_Char)
AND
GlobalGetFlag("LLXPSCALE_IgnoreEnemyAlignment", 1)
THEN
DB_NOOP(1);

QRY
LLXPSCALE_QRY_IsHostileToPlayer((CHARACTERGUID)_Char, (INTEGER)_CombatID)
AND
GlobalGetFlag("LLXPSCALE_IgnoreEnemyAlignment", 0)
AND
DB_IsPlayer(_Player)
AND
DB_CombatCharacters(_Player, _CombatID)
AND
CharacterIsEnemy(_Char, _Player, 1)
THEN
DB_NOOP(1);

QRY
LLXPSCALE_QRY_IsHostileToPlayer((CHARACTERGUID)_Char, (INTEGER)_CombatID)
AND
GlobalGetFlag("LLXPSCALE_IgnoreEnemyAlignment", 1)
THEN
DB_NOOP(1);

QRY
LLXPSCALE_QRY_CharacterIsValid((CHARACTERGUID)_Char)
AND
CharacterIsPlayer(_Char, 0)
AND
CharacterIsPartyFollower(_Char, 0)
AND
CharacterIsSummon(_Char, 0)
AND
IsTagged(_Char, "TOTEM", 0)
AND
IsTagged(_Char, "LeaderLib_Dummy", 0)
AND
IsTagged(_Char, "LEADERLIB_IGNORE", 0)
THEN
DB_NOOP(1);

QRY
LLXPSCALE_QRY_CanGrantExperience((CHARACTERGUID)_Char)
AND
IsTagged(_Char, "LLXPSCALE_DisableDeathExperience", 0)
AND
ObjectGetFlag(_Char, "LLXPSCALE_GrantedExperience", 0)
AND
NRD_CharacterGetInt(_Char, "Resurrected", 0) // Never resurrected
AND
GlobalGetFlag("LLXPSCALE_DeathExperienceDisabled", 0)
AND
LLXPSCALE_QRY_CharacterIsValid(_Char)
THEN
DB_NOOP(1);

QRY
LLXPSCALE_QRY_CharacterIsPlayerRelated((CHARACTERGUID)_Char)
AND
CharacterIsPlayer(_Char, _a)
AND
CharacterIsPartyFollower(_Char, _b)
AND
IntegerMax(_a, _b, 1)
THEN
DB_NOOP(1);

QRY
LLXPSCALE_QRY_CharacterIsPlayerRelated((CHARACTERGUID)_Char)
AND
CharacterIsSummon(_Char, 1)
AND
CharacterGetOwner(_Char, _Owner)
AND
CharacterIsPlayer(_Owner, 1)
THEN
DB_NOOP(1);
//END_REGION 

//REGION DEATH_EVENT
IF
CharacterDied(_Char)
AND
LLXPSCALE_QRY_CanGrantExperience(_Char)
AND
DB_CombatCharacters(_Char, _CombatID)
AND
LLXPSCALE_QRY_IsHostileToPlayer(_Char, _CombatID)
AND
GetUUID(_Char, _UUID)
THEN
NRD_ModCall("LLXPSCALE", "GrantPartyExperience", _UUID);

IF
CharacterKilledBy(_Char, _Attacker, _)
AND
NOT DB_CombatCharacters(_Char, _)
AND
NOT DB_CombatCharacters(_Attacker, _)
AND
LLXPSCALE_QRY_CharacterIsPlayerRelated(_Attacker)
AND
LLXPSCALE_QRY_CanGrantExperience(_Char)
AND
GetUUID(_Char, _UUID)
AND
GetUUID(_Attacker, _AttackerUUID)
THEN
NRD_ModCall("LLXPSCALE", "GrantPartyExperience", _UUID, _AttackerUUID);

// Killed a non-enemy NPC outside of combat (one-shot, so combat did not have a chance to start)
PROC
ProcCrimeCreateMurder(_Attacker, _Char, _CrimeID)
AND
LLXPSCALE_QRY_CharacterIsPlayerRelated(_Attacker)
AND
LLXPSCALE_QRY_CanGrantExperience(_Char)
AND
GetUUID(_Char, _UUID)
AND
GetUUID(_Attacker, _AttackerUUID)
THEN
NRD_ModCall("LLXPSCALE", "GrantPartyExperience", _UUID, _AttackerUUID);
//END_REGION

EXITSECTION
ENDEXITSECTION
ParentTargetEdge "__Start"